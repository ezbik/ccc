#!/usr/bin/perl

use POSIX qw(strftime);
$now_month = strftime "%Y-%m", localtime;

open IN, "<ambar.txt";

while(<IN>) 
	{
        $i++;
        chomp;
        #skip whitespace lines
        s/\#.*//; 
        if (/^\s*$/) {next}
	if (/^(\S+)\s+(\S+)\s+([\d\$\.]+)($|\s)/) 
		{
		$date=$1;
                $descr=$2; 
		$sum=$3;
		$month=$date;
		$month=~s@-\d\d$@@;
                #print "date=$date sum=$sum\n";
                if ($month ne $now_month) {next}
		if ($sum=~/\$$/) 
                        {
                        $sum=~s/\$//;
                        }
                        else 
                        {
                        $sum=ccc($sum,"byr","usd",$date);
                        }
        
		$day_hash{$date}+=$sum ; 
		$day_hash_descr{$date}.=" $descr;" ; 
		$month_hash{$month}+=$sum ; 
		}
                else 
                {print "junk line #$i :  $_  \n exit!\n"; exit; }
	} 

 # print current month payments


foreach $date (sort keys %day_hash) 
	{
	if ($date=~/^$now_month/) { 
		print $date," ",sprintf("%.2f\$", $day_hash{$date}),"\t",$day_hash_descr{$date},"\n";
		}
	}



print "-"x30,"\n";

print "$now_month\t",(0+$month_hash{$now_month}),"\$\n"; 


sub ccc {

my $amount=shift;
my $from=shift;
my $to=shift;
my $date=shift;
my $ccc=`ccc $amount $from $to $date`;
chomp $ccc;
return $ccc;
}


