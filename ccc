#!/bin/bash

ME_IN_BELARUS=1

test -d  ~/.ccc || mkdir  ~/.ccc  -p

usage () {
echo "USAGE
$0 Amount From-currency To-currency [Date]
"
exit
}

get_rate () {

RATE=$(cat ~/.ccc/rates.csv | grep -P "$DATE,$FROM,$TO,.+" |head -n1 | cut -d, -f4)
if echo "$RATE" | grep -qP "\d"
then    :
else   

        if [[ $FROM == byn ]] || [[ $TO == byn ]]
        then
            :
            if [[ $TO == byn ]]
            then NBRB_Q=$FROM
            else NBRB_Q=$TO
            fi
            if [[ 1 != $ME_IN_BELARUS ]]    
            then PROXY="-x socks5://localhost:16000"
            fi

            local NBRB_O=`mktemp /tmp/nbrb.XXXXXXXXXXX`
            curl   $PROXY -Ss   "https://www.nbrb.by/api/exrates/rates/$NBRB_Q?ondate=$DATE&periodicity=0&parammode=2" -Ss  > $NBRB_O || exit 22

            RATE=$(     cat  $NBRB_O | jq .Cur_OfficialRate  -r)
            SCALE=$(    cat  $NBRB_O | jq .Cur_Scale  -r)
            rm -f $NBRB_O
            RATE=$( perl -e 'print '$RATE'/'$SCALE  )

            if [[ $FROM == byn ]] ; then  RATE=$( perl -e 'printf ("%.16f\n", (1/'$RATE' )  ) ' ) ; fi

        else

            RATE=$( curl -m5 -Ss https://currencies.apps.grandtrunk.net/getrate/$DATE/$FROM/$TO|head -1) \
                || echo wget FAIL
        #FROM=$(echo $FROM | tr '[a-z]' '[A-Z]')
        #TO=$(  echo $TO   | tr '[a-z]' '[A-Z]')
        #RATE=$( wget --timeout=5 -q -O - "https://openexchangerates.org/api/historical/$DATE.json?base=$FROM&app_id=921d23f3a412407eae11c2ad177c6648"  | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["rates"]["'$TO'"]'  ) \
                #|| echo wget FAIL
        fi
        echo $RATE | grep -q -P '^[\d\.\-e]+$' || { echo "rate failed"  ; exit 2 ; }
        FROM=$(echo $FROM | tr '[A-Z]' '[a-z]')
        TO=$(  echo $TO   | tr '[A-Z]' '[a-z]')
        echo "$DATE,$FROM,$TO,$RATE" >>  ~/.ccc/rates.csv
fi


}

pre_rate () {

local K

if [[ $FROM == "sat"  ]] ; then FROM=btc ; K=0.00000001 ; fi
if [[ $TO   == "sat"  ]] ; then TO=btc   ; K=100000000  ; fi
if [[ $FROM == "mbtc" ]] ; then FROM=btc ; K=0.001      ; fi
if [[ $TO   == "mbtc" ]] ; then TO=btc   ; K=1000       ; fi

if [[ -n $K ]]
then
    AMOUNT=$( perl -e 'printf ("%.16f\n", '$K*$AMOUNT' ) ' )
fi

}


AMOUNT=$1
FROM=$(echo $2 | tr '[A-Z]' '[a-z]')
TO=$(echo $3| tr '[A-Z]' '[a-z]')
DATE=$4

[ -z "$TO" ] && usage

[ -z "$DATE" ] && DATE=`date +%F`

pre_rate

get_rate

perl -e 'printf ("%.6f\n", '$RATE*$AMOUNT' ) '



